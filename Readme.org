#+STARTUP: indent
#+STARTUP: noinlineimages

#+OPTIONS: reveal_mathjax:t
#+OPTIONS: reveal_slide_number:c/t
#+OPTIONS: reveal_history:t
#+OPTIONS: toc:nil
#+REVEAL_HLEVEL: 3
#+REVEAL_TRANS: linear
#+REVEAL_TITLE_SLIDE:<h2>%t</h2><p>%a</p><p><a href="https://t.me/dura_lex">@dura_lex</a></p>
#+REVEAL_THEME: night
#+REVEAL_EXTRA_CSS: override.css

#+TITLE: How to survive^W live with Linux
#+AUTHOR: Abc Xyz
#+EMAIL: @dura_lex

* How to +survive+ live with Linux
:PROPERTIES:
:UNNUMBERED: notoc
:REVEAL_BACKGROUND: ./images/linux_matrix.png
:END:

↑Title for Windows users↑

* Table of Contents
:PROPERTIES:
:UNNUMBERED: notoc
:END:

#+REVEAL_TOC: headlines 1

* Introduction
** Motivation

#+ATTR_REVEAL: :frag (appear)
- Many questions about tools/tips/scripting/etc in Linux
- Many mentions about my life with Linux
- You should know, what you are losing (Linux vs Windows)
- Sharing experience and knowledge

#+BEGIN_NOTES
- Часто спрашивают совета при работе в Linux, какие инструменты использую.
- Частенько не обходится без шуток. Странно, что сейчас не пошутили, пока всё настраивал.
- Windows не позволяет делать множество вещей.
- В очередной раз хочу рассказать о том, в чём сам разобрался.
#+END_NOTES

** Background

First time in 2006 ([[https://xakep.ru/2007/02/26/36939/][Windows Vista vs Mandriva: какую ОС
  выбрать в 2007 году?]])

#+ATTR_HTML: :width 30%
[[./images/xakep.jpg]]

#+BEGIN_NOTES
Дядя подарил журнал Хакер, на диске которого была Mandriva и *FreeBSD*. Со второй я вообще не понял,
что нужно было делать, т. к. на тот момент *было 12 лет*, а первая заинтересовала, потому что
компьютер был слабый и Windows Vista не тянул, а рабочий стол в виде *вращающегося куба* хотелось.
#+END_NOTES

#+REVEAL: split

#+REVEAL_HTML: <div class="column" style="float:left; width: 30%">
- Mandriva
- Ubuntu
- Runtu
- Fedora
- Debian
- Slackware
- SUSE
- MeeGo
- NixOS
- GuixSD
- Xubuntu
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 30%">
- CentOS
- Calculate
- Gentoo
- BolgenOS
- OpenWRT
- webOS
- ChromiumOS
- AstraLinux
- AltLinux
- Mageia
- Moblin
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 30%">
- Linux Mint
- Kubunutu
- Knoppix
- Damn Vulnerable Linux
- Backtrack
- Mythbuntu
- SteamOS
- Mandrake
- many others
#+REVEAL_HTML: </div>

#+BEGIN_NOTES
Вот далеко не целый список ОС, которые я пробовал или использовал.

Среди интересных (о которых *не будет рассказано* далее):
- MeeGo — Moblin (Intel) + Maemo (Nokia) = Nokia N900
- BolgenOS — всеми известная ОС Дениса Попова, которую нельзя не попробовать.
- ChromiumOS — изучал исходный код, написан великолепно, а главное — есть Rust.
- AstraLinux — очень много работал в своё время, даже писал модули ядра для мандатной системы.
- Backtrack — WHAX + Auditor Security Collection; все ли помнят, откуда пришла KaliLinux?
- SteamOS — ставил основной системой для игр, когда был глупым, толку никакого.
#+END_NOTES

#+REVEAL: split

Arch Linux since 2013

#+ATTR_HTML: :width 70%
[[./images/archlinux_logo.png]]

#+BEGIN_NOTES
Примерно на *первом-втором курсе* я купил ноутбук и установил туда ArchLinux, с тех пор *ни разу не
переустанавливал*, только обновлял пакеты и настройки.
#+END_NOTES

#+REVEAL: split

Open source community member (maintainer, developer)

#+ATTR_HTML: :width 70%
[[./images/oss.jpg]]

#+BEGIN_NOTES
Являюсь maintainer некоторых пакетов в ArchLinux, ну и разработчиком соответственно. Пытаюсь по мере
возможности принимать участие *в обсуждении направления развития* ОС или утилиты, которые мне
интересны.

Стараюсь писать небольшие заметки и статьи для общего пользования, но качества они не очень
хорошего, поэтому в массы их не выкладываю.

Для *всего контента (статьи, доклады, настольные игры)*, что я произвожу стараюсь выкладывать
исходные тексты.
#+END_NOTES

** Disclaimer

I'm the software evangelist I use

#+BEGIN_NOTES
Моя любимая рубрика.

К тому, про что я буду рассказывать, буду относиться *предвзято*.
#+END_NOTES

#+REVEAL_HTML: <div class="container" style="display:flex; align-items:center">
#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/rust_logo.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/spacemacs_logo.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/ghidra_logo.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/archlinux_logo_mini.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/gitlab_logo.png]]
#+REVEAL_HTML: </div>
#+REVEAL_HTML: </div>

#+REVEAL: split

Not only Linux, but Open Source

* Principles
** KISS

keep it simple stupid

#+ATTR_REVEAL: :frag (appear)
#+ATTR_HTML: :width 90%
[[./images/archlinux_kiss.jpg]]

#+BEGIN_NOTES
Термин был придуман в ВВС США, *главой Lockheed*. Самолёты должны быть настолько простыми, что
*любой механик мог их починить* между боями.

В нашем Linux мирке этот акроним расшифровывается немного по-другому, но значение остаётся тем же. Я
стараюсь *следовать этому принципу*, так же, как и другим в *Unix-way*, например, программа должна
делать только *одну работу хорошо*. Чаще всего GUI приложения в данную категорию не попадают, потому
что они комплексные, как минимум там нужно понимать, как работают потоки.
#+END_NOTES

** TUI

Text-based user interface

#+ATTR_HTML: :width 900
[[./images/Fdedit.png]]

#+BEGIN_NOTES
Текстовый интерфейс может быть достаточно разным, но скорее всего вы привыкли его видеть таким,
каким он представлен на рисунке (Windows).

Это и есть соблюдение принципов KISS.
#+END_NOTES

** CLI

Command-line interface

#+ATTR_HTML: :width 90%
[[./images/cli.png]]

#+BEGIN_NOTES
- легко использовать
- легко переносить
- легко разрабатывать
- чистый KISS
#+END_NOTES

* OS

*It's my opinion, for my workflow

** ArchLinux

#+ATTR_REVEAL: :frag (appear)
- KISS (no bloatware and unnecessary services)
- Stability & Reliability (rolling release)
- Arch Wiki
- =pacman=
- Arch User Repository
- Perfect learning base
- Arch Linux Community (no companies, no corporate ties)
- Flexibility & Customization

#+BEGIN_NOTES
- *Нет ничего лишнего*, только то, что вы сами установили и настроили.
- Да, не удивляйтесь. Пакеты можно *обновлять только все разом*, соответственно в любой промежуток
  времени тестирование проходит именно на последних версиях пакетов. Баги возникают только *из-за
  конфликтов файлов конфигураций*.
- Возникли проблемы на любом Linux — читай Arch Wiki.
- Пожалуй, лучший пакетный менеджер, к тому же самый быстрый.
- Любой пакет из git репозитория. Есть *всё, что душе угодно*.
- Хотите познать Linux, ставьте ArchLinux.
- Яркий пример продукта, который делается сообществом (как с положительной, так и отрицательной
  точки зрения).
- Один из самых разумно-гибких дистрибутивов.
#+END_NOTES

** Why not others?

*** Ubuntu, Fedora, Mint, Manjaro, etc

Because these are very fat OSs:
- a lot of unused software
- many configuration files
- a lot of strange behavior

But for some reason these distributions are very useful

*** Gentoo, LFS

Fuss too much with them

*** NixOS, GuixSD

NixOS:

- DSL
- some +my+ issues
- FHS (Filesystem Hierarchy Standard)

GuixSD:

- very unstable
- libre OS

* Software

Mostly CLI and TUI

#+BEGIN_NOTES
Только тот софт, которым пользуюсь я.
#+END_NOTES

** Internet
*** Network managers

- NetworkManager (=nmcli=, =nmtui=)
- systemd-networkd
- iwd

#+BEGIN_NOTES
- Из коробки есть поддержка практически любых сетевых соединений, что-то доставляется плагинами.
- Минималистичная настройка, использую там, где требуется *настроить один раз и забыть*.
- Всё, что требуется для сетевого соединения. Без каких-либо зависимостей от Intel.
#+END_NOTES

*** Tor and I2P

#+ATTR_REVEAL: :frag (appear)
- SOCKS
  - =tsocks=, =proxychains-ng=
  - =libproxy=
  - environment variables
- HTTP
  - =httptunnel=
  - =proxytunnel=
  - =corkscrew=
- torify (applications w/o proxy settings)

#+REVEAL: split

- I2P
  - mail
  - messenger
  - IRC
  - iMule
  - etc

#+ATTR_REVEAL: :frag appear
/Средство, позволяющее ежедневно водить копирастам, спецслужбам и прочим пидорам хуём по губам/ (c) Луркоморье

*** Web browsers

- w3m
- elinks

Useful for fast browsing, scraping from console, previewing in file managers and many other cases

#+REVEAL: split

Firefox

Other VIM-based browsers are unstable and have less features (based on WebKit, didn't have Rust Quantum engine):

- luakit
- surf
- qutebrowser

#+REVEAL: split

VIM plugins:

- Pendactyl (only Extended Support Release)
- Tridactyl
- Vimium
- Vimium C (current)

#+REVEAL: split

Hint mode

#+ATTR_HTML: :width 90%
[[./images/vimium_c.png]]

#+REVEAL: split

Console mode

#+ATTR_HTML: :width 90%
[[./images/tridactyl.png]]

*** youtube-dl

=youtube-dl= usage

#+ATTR_HTML: :width 70%
[[./images/yt_dl.png]]

#+BEGIN_NOTES
1000 и 1 способ скачать/получить ссылку видео, аудио и т. п.
#+END_NOTES

#+REVEAL: split

Extractors list

#+ATTR_HTML: :width 70%
[[./images/yt_dl_list.png]]


#+REVEAL: split

tridactyl / etc + youtube-dl + mpv / mpd

=

video/audio ninja (you is godlike with i3)

#+REVEAL: split

Restrictions, advertising? What are you talking about?

*** curl — httpie

- simple using
- nice format output
- JSON parsing (=curl= + =jq=)
- etc

#+REVEAL: split

Example of default output

#+ATTR_HTML: :width 80%
[[./images/httpie.png]]

*** wget — aria2

- Faster (segmented downloading)
- BitTorrent extensions (DHT, PEX, Multi-Tracker, UDP tracker, local peer discovery, etc)
- More protocols (FTP, Metalink, etc)

# *** Cloud storages

# WebDAV
# gvfs with encryption

*** Torrents
*Transmission*

- Client-server architecture
- Mobile client
- CLI client for scripts + TUI client — =tremc=

#+ATTR_HTML: :width 70%
[[./images/tremc_0.png]]

#+REVEAL: split

Torrent info

[[./images/tremc_1.png]]

#+REVEAL: split

*+peerflix+* *WebTorrent*

- Streaming torrent client
- Modules
- Media futures
- node.js & browser +needed Rust/wasm version+

*** Mail — (neo)mutt + OfflineIMAP + getmail + msmtp + etc

- Customization
  - Key bindings
  - Custom mail headers
  - Favorite editors
  - View, colors, sidebars
- Modules
  - Address books
  - IMAP, POP3, SMTP clients
  - Password managers
  - Everywhere in sh/bash

#+REVEAL: split

- GPG
- CLI
- No JS, HTML

#+REVEAL: split data-background="./images/neomutt.png"

*** Messengers

*BitlBee* - IRC gateway

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
  - XMPP
  - Hipchat
  - Hangouts
  - Twitter
  - Skype
  - Telegram
  - Facebook
  - VK
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
  - Matrix
  - Discord
  - Steam
  - Mastodon
  - Slack
  - ICQ
  - etc
#+REVEAL_HTML: </div>

#+REVEAL: split

BitlBee interface

#+ATTR_HTML: :width 80%
[[./images/bitlbee.png]]

#+REVEAL: split

*WeeChat* - IRC

[[./images/weechat.gif]]

#+REVEAL: split

*MCabber*, *profanity* — XMPP

- PGP
- OTR
- Plugins/Modules
- Multi-User chat
- Command completion

#+REVEAL: split

profanity Pip-Boy

[[./images/profanity.png]]

#+REVEAL: split

*toxic* — Tox

- P2P
- For secure conversation

#+REVEAL: split

*tg-cli* — Telegram, but telegram-desktop too

*** RSS, news

*newsboat*

As mutt, but for RSS

#+REVEAL: split

*Telegram*

Channels with bots, which sends RSS (Reddit, Twitter, HackerNews, Lobste.rs,
etc) to channels

#+BEGIN_NOTES
Now I don't read news, very much time, which I can spend for
developing/writing/etc.
#+END_NOTES

*** Remote desktop

- Easy tasks

  ssh with X forwarding (use settings for compressing and encrypting traffic for
  speedup)

- Hard tasks

  - VNC
  - qemu with SPICE + VNC

** Multimedia
*** Image viewers
*Framebuffer* (energy saving)

- =fbi=
- =fbv=

#+ATTR_REVEAL: :frag (appear)
Don't forget configure tty!

#+REVEAL: split

*Simple*

- feh
  - CLI and hotkey powerful
  - Very simple (so no screenshots)

#+REVEAL: split

- sxiv (more GUIably, than feh)
- vimiv (VIM image viewer)

*** ImageMagick

Very powerful image processing tool!

Throw out your GIMP. A joke of course. Throw out your Photoshop.

*** Music

*mpd*

- Server with clients:
  - mobile
  - GUI
  - TUI
  - CLI
- mpdscribble

#+BEGIN_NOTES
I don't like music streaming services, because too much choices. I have player,
which firmware is open source, I create tools for syncing playlists. I create
mini iTunes.
#+END_NOTES

#+REVEAL: split

ncmpcpp

#+ATTR_HTML: :width 100%
[[./images/ncmpcpp.png]]

*** Video
*Players*

- mpv — most powerful video/audio player
- cvlc — CLI version of VLC

#+REVEAL: split

*FFmpeg*

Converting, hardware rendering, screencasting, input/output many formats
(camera, screens, devices)

*** Metadata

Many interesting things you can know from metadata of video, images and data

- ExifTool (audio, video, images, documents, etc)
- exiv2 (images)

** Utilities
*** Terminal emulators

*urxvt (rxvt-unicode)*
- Old
- Universal
- Many patches and plugins developed in Perl
- Configurations in Xresources

#+REVEAL: split

*Alacritty*
- GPU rendering
- Rust
- Many features

#+REVEAL: split

*Kitty*
- GPU rendering
- Python
- More features (Unicode glyphs, many nice bindings, graphics etc)

*** Terminal multiplexer. tmux

Also =byobu= as more friendly and =screen= as older

#+ATTR_HTML: :width 90%
[[./images/tmux.png]]

#+BEGIN_NOTES
- Enables multiple windows and panes within a single terminal window
- Keeps windows and panes in a session
- Enables session sharing (great for pair programming)
#+END_NOTES

*** File managers

*ranger*

- Many features
- Python
- Slow

#+REVEAL: split

ranger interface

[[./images/ranger.png]]

#+REVEAL: split

*vifm*

- C
- VIM
- Diffing
- Filtering
- Searching
- Batch renaming

#+REVEAL: split

vifm interface

[[./images/vifm.png]]

*** Git

You should learn it!

I use it everywhere:
- control version
- backups
- diffing
- merging
- review
- messaging
- file system
- etc

#+REVEAL: split

*Gitea*, *GitLab*, *GitWeb* as self-hosted Git-repository managers

#+ATTR_HTML: :width 75%
[[./images/git-instaweb.png]]

*** QEMU (KVM)

A free and open-source emulator and virtualizer that can perform hardware
virtualization.

- User-mode and system emulation
- The emulation of various architectures and periphery
- TUI, CLI
- Integration
- Open Source

*** WINE

Wine Is Not an Emulator is a free and open-source compatibility layer that aims
to allow application software and computer games developed for Microsoft Windows
to run on Unix-like operating systems.

- Debugging
- Backward compatibility
- Non-x86 architectures
- RE of Windows

#+REVEAL: split

Other versions and uses:

- CrossOver
- Cedega/WineX
- Darwine
- Pipelight
- Proton
- ReactOS
- Odin (OS/2)
- Parallels Desktop and VirtualBox
- WineD3D
- etc

*** Backups

*restic*

Encrypted snapshots, many backends + systemd

# *** Synchronization

# Syncthing
# Unison

** Text editing

Use doc{,x}, ppt{,x}, xls{,x} and others if you really needed it.

*** VIM

#+ATTR_HTML: :width 50%
[[./images/vim_quit.jpeg]]

#+REVEAL: split

- Modern text editor (tabs, windows, buffers, syntax highlighting, spell
  checking, folding, etc)
- Modal editor (insert and normal modes + visual and line modes)
- Comprehensive help system
- Memory footprint is very low, faster than other
- Command centric. You can perform complex text related task with few commands
- Many plug-in available
- Native scripting (vimscript) and built-ins commands
- vimdiff, rview, rvim
- Ubiquitous

*** Emacs

#+ATTR_HTML: :width 70%
[[./images/vim_vs_emacs.png]]

#+REVEAL: split

- Client-server (share the buffer list, kill ring, undo and other)
- Pervasive help system with keybindings, functions and commands documented on
  the fly
- CLI, TUI, GUI
- Extensible and customizable Lisp programming language variant (Emacs Lisp)!..

#+REVEAL: split

- Ability to emulate vi and vim (using Evil, Viper or Vimpulse)
- A powerful and extensible file manager (dired), integrated debugger, and a
  large set of development and other tools
- Having every command be an Emacs Lisp function enables commands to DWIM (Do
  What I Mean). For example, a =switch-or-split-window=

#+REVEAL: split

"An OS inside an OS"
[[./images/real_programmers.png]]

#+ATTR_REVEAL: :frag (appear)
Rust ♥️ Emacs = remacs

*** Spacemacs & Doom

My choice:

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
#+ATTR_HTML: :width 50%
[[./images/spacemacs_logo.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
[[./images/doom_logo.png]]
#+REVEAL_HTML: </div>

*** Org-mode

Your Life in Plain Text

- Keeping notes
- Maintaining TODO lists
- Planning projects
- Authoring documents (à la Jupyter notebook, tablesheet, exporting to another
  formats)

#+ATTR_REVEAL: :frag (appear)
This presentation created in org-mode and exported to HTML + reveal.js

#+BEGIN_NOTES
Использую для всего на свете: отчёты, заметки, презентации, планирование,
научные работы.
#+END_NOTES

#+REVEAL: split

Planning

#+ATTR_HTML: :width 80%
[[./images/org_mode_0.jpg]]

#+REVEAL: split

Clocking

#+ATTR_HTML: :width 80%
[[./images/org_mode_1.jpg]]

#+REVEAL: split

Agendas

#+ATTR_HTML: :width 80%
[[./images/org_mode_2.jpg]]

#+REVEAL: split

Capturing

#+ATTR_HTML: :width 80%
[[./images/org_mode_3.jpg]]

#+REVEAL: split

Tables

#+ATTR_HTML: :width 80%
[[./images/org_mode_4.jpg]]

#+REVEAL: split

Exporting

#+ATTR_HTML: :width 80%
[[./images/org_mode_5.jpg]]

#+REVEAL: split

Working with source code

#+ATTR_HTML: :width 80%
[[./images/org_mode_6.jpg]]

*** LaTeX

#+BEGIN_SRC latex
\mode<presentation>
{
  \usetheme{dsec}
  \dsecset{progressbar = frametitle}
  \dsecset{subsectionpage = progressbar}
}
\title{Introduction to software-based
 microarchitectural side-channel attacks}
\subtitle{}

\author{Abc Xyz\\
@dura\_lex}
\titlegraphic{\includegraphics[height = 0.9cm]{logo.pdf}}

\date{}
\subject{Information security}
#+END_SRC

#+REVEAL: split

[[./images/latex_pdf.png]]

#+REVEAL: split

- Typesetting journal articles, technical reports, books, and slide
  presentations
- Control over large documents containing sectioning, cross-references, tables
  and figures
- Typesetting of complex mathematical formulas
- Advanced typesetting of mathematics with AMS-LaTeX
- Automatic generation of bibliographies and indexes
- Multi-lingual typesetting
- Inclusion of artwork, and process or spot colour

#+BEGIN_NOTES
Использую для больших докладов, научных работ.
#+END_NOTES

*** Zathura

Simple PDF reader

- VIM bindings
- Automatic reloading document
- Synctex
- Recoloring, reformatting
- CLI

*** Markdown

Use for work

*** AsciiDoc

Use for _*real*_ work

- Including files
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#lists][Normal lists with complex content]]
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#links][Anchors]]
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#images][Formatted images]]
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#source-code][Powerful code blocks]]
- Comments
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#tables][Tables for the people]]
- ToC
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#bibliography][Bibliography]]
- etc

*** Pandoc

Markup converter

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
- Markdown
- reStructuredText
- AsciiDoc
- Org-Mode
- Textile
- HTML
- CSV
- EPUB
- roff
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
- LaTeX
- DocBook
- OPML
- InDesign
- Wiki
- reveal.js
- Microsoft Word
- OpenOffice/LibreOffice
- etc
#+REVEAL_HTML: </div>

*** Spell checkers

Aspell, Hunspell + LanguageTool for grammars

Use my personal dict everywhere (editors, browser, shell, edit fields)

*** Tesseract OCR

- CLI
- API
- Multilanguages

** Core utilities

#+ATTR_REVEAL: :frag (appear)
- Standard utilities are old and have few features, but stable
- The list below is alternatives, not replace
- For scripts you should use first order applications for compatibility
- It's normal, that more than half applications were developed in Rust language

*** Bash — Zsh

- Featured aliases (suffix and global)
- Easy directory navigation
- Advanced completion
- Globbing
- Command line editing
- Spelling correction
- Themes and plugins (Oh My Zsh, Prezto, Powerlevel9k, etc)
- etc

#+REVEAL: split

Zsh features

[[./images/zsh.gif]]

*** ls — lsd (r)

Colorized and with icons =ls=

[[./images/lsd.png]]

*** tree (ls) — exa (r)

More features and faster

#+REVEAL: split data-background="./images/exa.png"

*** cat + less, more — bat (r)

- Automatic paging
- Customization
- More features...

#+REVEAL: split

Syntax highlighting

[[./images/bat_syntax.png]]

#+REVEAL: split

Git integration

[[./images/bat_git.png]]

#+REVEAL: split

Show non-printable characters

[[./images/bat_print.png]]

*** cp, mv, rm — rsync

- Fast and extraordinarily versatile file copying
- Progress bar
- Delta-transfer
- Client-server architecture
- Can replace =scp=
- Can used as backup tool

*** du, df — ncdu

Interactive =du= and =df=

#+REVEAL: split

ncdu

[[./images/ncdu.png]]

*** tar, (un)zip — bsdtar, 7z

tar + (un)zip = bsdtar

- Automatic format detection
- Handles file flags, ACLs, arbitrary pathnames, etc
- Library. =libarchive=

*** find — fd (r)

- Convenient syntax: =fd PATTERN= instead of =find -iname '*PATTERN*'=
- Colorized terminal output (similar to ls)
- It's fast
- Smart case
- Ignores hidden directories and files, =.gitignore= by default
- Fast regular expressions
- Unicode-awareness
- The command name is 50% shorter* than find
- Parallel command execution with a syntax similar to GNU Parallel

#+REVEAL: split

[[./images/fd.svg]]

*** diff — git-diff, colordiff, delta (r)

Use +git-diff+ +colordiff+ =delta= for diffing!


- Language syntax highlighting with color themes
- Within-line highlights based on a Levenshtein edit inference algorithm
- Git style strings (foreground color, background color, font attributes) are
  supported for >20 stylable elements
- Side-by-side view
- Line numbering

#+REVEAL: split

- =diff-highlight= and =diff-so-fancy= emulation modes
- Stylable box/line decorations to draw attention to commit, file and hunk
  header sections.
- =n= and =N= keybindings to move between files in large diffs, and between
  diffs in =log -p= views (=--navigate=)

#+REVEAL: split

=delta= with line numbers

#+ATTR_HTML: :width 70%
[[./images/delta_0.png]]

#+REVEAL: split

=delta= with =side-by-side=

[[./images/delta_1.png]]

#+REVEAL: split

*vimdiff* (VIM), *ediff* (Emacs)

Powerful interactive diffing tools

3-way diff for merging

*** diffoscope

In-depth comparison of files, archives, and directories

- Compare many file formats (binary, archive)
- Fallback on hexdump comparison
- Fuzzy-matching to handle renamings

*** grep — ripgrep

- Fastest (Rust's regex engine + paralleling)
- Unicode support by default
- Powerful regexp on Rust (but PCRE2 exist)
- Support searching files compressed (bzip2, gzip, lzma, xz, etc)
- Multiline searching
- Arbitrary input preprocessing filters

*** sed, {g,n,m}awk

If you are not using it yet, then it's time

*** (u)mount — udisks2

Mounting with user's permissions

*** pass

CLI pass manager. Powered by OpenPGP

*** fzf

A command-line fuzzy finder.

Live demo

*** systemd

Not Unix way, but very useful

- Journal: system logging
- Timers: reasonable alternative to cron
- systemd-boot: UEFI boot manager
- systemd-logind: session manager
- systemd-networkd: network configuration management

#+REVEAL: split

- systemd-nspawn: light-weight namespace container
- systemd-resolved: network name resolution
- systemd-timesyncd: system time synchronization across the network
- systemd-tmpfiles: temporary files
- etc

*** Simple and useful tools for RE and life

- =man=, =apropos=, =mandb=: throw out the Internet, you have manuals
- =tee=: read from standard input and write to standard output and files
- =mktemp=: create a temporary file or directory
- =tr=: translate or delete characters
- =cut=: remove sections from each line of files
- =od=, =xxd=, =hexdump=: custom hex view
- =sort=, =uniq=, =comm=: sort, delete duplicates, compare output

#+REVEAL: split

- =head=, =tail=
- =wc=: count of chars, lines, bytes
- =strings=
- =iconv=: convert text from one character encoding to another
- =file=: what is it?
- =watch=: execute a program periodically, showing output
- =shred=: burn after reading

#+REVEAL: split

- =inotifywait=: wait for changes to files using inotify
- =ls{blk,pci,cpu,usb,mod}=: block, PCI, CPU, USB devices, kernel modules
- =sudo=, but not =su= (=sudoedit= for editing files): I'm root
- =pgrep=, =pidof=: find process
- =kill=, =pkill=, =killall=: then kill it
- =ps=, =htop=: process list
- =sleep=: Zzz...

#+REVEAL: split

*radare2*

[[./images/r2.png]]

*** Rust section

Install =rustup=: https://rustup.rs

#+BEGIN_SRC shell
$ cargo install package_name
#+END_SRC

and you on the horse!

#+REVEAL: split

- =tokei=: inspect source code
- =jq=: JSON prettifier
- =xsv=: very fast parsing of large CSV files
- =fselect=: searching on file system with SQL queries. =find= + =ls= + =awk=
- =bingrep=: color =readelf=, more powerful =grep= for ELF files

#+REVEAL: split

- =ripgrepall=: find everywhere: binary files, PDFs, images, music, video, etc
- =stringsext=: Better searching Unicode strings, but performance may be better
- =tealdeer=: tldr, documentation
- =topgrade=: upgrade your system
- =choose=: a human-friendly and fast alternative to cut and (sometimes) awk

** Windows managers
*** i3

#+ATTR_REVEAL: :frag (appear)
- Minimalism (i3 is fast)
- Screen real estate
- Keyboard-driven workflow
- Flexibility
- Workspaces

#+BEGIN_NOTES
- Меньше оперативной памяти, возможность запускать в контейнерах, виртуальных
  машинах. Устанавливаю только то, что мне нужно, нет ничего лишнего.
- Не нужно управлять окнами, всегда на полный экран.
- Абсолютно любое действие можно забиндить на клавишу. Мышь абсолютно не нужна.
- Из утилит (Unix-way) можно сделать любой DE, который тебе удобен.
- Рабочие пространства, на которых ты можешь чётко зафиксировать определённые
  программы, их расположение и поведение.
#+END_NOTES

#+REVEAL: split

Live demo

*** Panel

- i3bar
- i3status
- i3status-rust
- i3blocks
- polybar
- conky
- j4status
- many many others

#+REVEAL: split

Live demo

*** +dmenu+ rofi

Featured dynamic menu for X.

#+REVEAL: split

Live demo

*** dunst

Dunst is a highly configurable and lightweight notification daemon.

#+REVEAL: split

Live demo

* Life + IT Workflow
#+BEGIN_NOTES
Я буду идти от чисто технических привычек к более жизненным ситуациям.
#+END_NOTES

** Configurations

One configuration for everything: PC, Laptop, Work, Guest/Virtual PC,
Smartphone, Router, Server etc?

#+REVEAL: split

#+ATTR_REVEAL: :frag (appear)
- A custom shell scripts?
- A bare git repo?
- An existing dotfile manager: homeshick, rcm, GNU Stow, yadm, etc?

#+REVEAL: split

Chezmoi — manage your dotfiles across multiple machines, securely.

- Flexible: OS (Linux, MacOS, Windows, FreeBSD, Termux), Arch, Hostname
- Personal and secure (1Password, Bitwarden, gopass, KeePassXC, LastPass, pass,
  Vault, CLI tool and GnuPG)
- Transparent: dry run mode, one-to-one map of files and symlinks
- Declarative (templates, metadata in names) and robust (atomic operations)

#+REVEAL: split

[[https://github.com/saruman9/dotfiles][My Dotfiles]]

*** File system cleanliness

- =chezmoi unmanaged= + =fzf= and ignored files
- Scripts for checking unneeded packages, installing packages
- Encrypted sensitive information and private repositories

*** Dark and light

[[./images/red_eye.jpg]]

This eye are looking at you like a Winduzyatnik

#+REVEAL: split

- Auto switching temperature of display (without light detector)
- Auto switching dark/light themes (no universal solution)

** VIM/Emacs everywhere

#+ATTR_REVEAL: :frag (appear)
- Don't use a mouse, because it need more time, than a keyboard
- A home row of your keyboard is your friend: speedup and economy (keyboard with
  lights)
- Xdotool + Emacs = edit everything in Emacs
- VIM/Emacs keymaps and modes everything: browser, IDE, windows manager,
  multiplexer, music player, torrent manipulation programs, mail, everything...
  except Ghidra.

#+REVEAL: split

#+ATTR_HTML: :width 60%
[[./images/vim_evangelism.png]]

** Presentations, reports, documents, messages

Only plaintext:
- diffing, manipulation with CLI tool
- using version control system
- emails without HTML and JS shits (Yandex.Mail, you place is in the hell)
- more informative, more convertible, more security

*** How I use it

I can convert org-mode (asciidoc) to everything: plaintext, static HTML, LaTeX,
PDF, presentations (beamer, reveal.js). I can generate books and reports from
plaintext.

#+REVEAL: split

I can share sources or make easy review and use parts of already wrote items.

#+REVEAL: split

I have many notes with ideas, presentations in structured plaintext format in
version control systems.

#+REVEAL: split

I can sync all my documents (reports, books, presentations, ideas) between
machines for working with it everywhere.

** Smartphone

#+ATTR_REVEAL: :frag (appear)
- AOSP or similar
- Open source utilities: F-Droid or GitHub + ADB
- Termux for PC's work: SSH, running all Linux stuff (tmux, my Rust CLI
  programs), using Chezmoi configurations
- Sync with other devices: passwords, web history, music playlists, etc
- VPN for working with remote (home, work, laptops, other) devices

** Subway workflow

#+ATTR_REVEAL: :frag (appear)
- Reading issues, mailing lists, writing answers (GitLab, GitHub apps)
- Reviewing PR/MR, fixing small bugs (IDE or VIM if exist keyboard)
- Writing notes, drafts of presentation (including this) with =orgzly=
  (org-mode) and git for sync
- +News from mail+, +RSS+, +RSS in Telegram+, I don't read news
- Reading books on jailbroken Amazon Kindle (all formats and many features)

** Other devices (router, multimedia box, etc)

#+ATTR_REVEAL: :frag (appear)
- All works on ArchLinux
- One configuration for everything
- Pi-hole, logger, route table, DNS server, proxy server with TLS, etc (replaced
  by Mikrotik)

#+REVEAL: split

Many firmwares are changed:

#+ATTR_REVEAL: :frag (appear)
- Bookreader is jailbroken
- Printer is jailbroken
- Digital music player is jailbroken (Rockbox OS)
- Vacuum cleaner with Ubuntu but not jailbroken yet (but with Russian voice
  already)
- I bought a car...

** Packages and open source

- Need a new software? Search in repositories and install it, that's all.
- AUR or nix have many, many packages ([[https://repology.org/][Repology]]),
  including for Windows OS, BlackArch have packages for penetration testers

#+REVEAL: split

I have custom PKGBUILDs for all patched software (also cracks^Winitial settings
for proprietary software).

I'm [[https://github.com/saruman9/pkgbuilds/][maintainer of some packages in
AUR]] and I regulates other packages (asks to update, to delete, to change
permissions of maintaining).

** Automate everything

If you do the same thing a second time, then it needs to be automated.

#+REVEAL: split

#+ATTR_REVEAL: :frag (appear)
- Analyzing the OS (packages, configurations, status, etc)
- Smart notifications (TODO, pomodoro, honeypots, China'a attacks, etc)
- Scraping of sites (buying tickets, news, generating API)
- All around RE/pentest
- Deleting complex ads (Yandex, for example)
- Specific subjects

#+ATTR_REVEAL: :frag (appear)
+JavaScript+, +PHP+, +Python+, Rust, Bash

#+BEGIN_NOTES
Первый раз — запись в ЦДО.

Меня нет в социальных сетях, на некоторые пары я не ходил, но следить за
информацией было необходимо, поэтому пришлось писать бота для VK, который
отправлял мне все сообщения и документы из группы.
#+END_NOTES

** Statistics about everything

- Finance budget
- Books
- Movies, serials, TV shows
- Sports activity
- Board games
- Quotes and situations from life

#+BEGIN_NOTES
Я отказался от половины, т. к. не хватало времени, но из-за того, что у меня
плохая память, я могу перечитать снова книгу, пересмотреть кино, не вижу
прогресса в чём-то.
#+END_NOTES

*** Text vs GUI

I uses text files for managing it all (filtering, creating reports, sharing
information between machines), all is encrypted.

#+BEGIN_NOTES
Для части задач пришлось переключиться на GUI или сайт, т. к. мои родная не
могут пользоваться теми же инструментами, что и я. Я регулярно экспортирую
информацию и синхронизируюсь.
#+END_NOTES

* Summary

#+ATTR_REVEAL: :frag (appear)
- Just a drop in the bucket
  - [[https://github.com/jlevy/the-art-of-command-line][Master the command line]]
  - [[https://github.com/learnbyexample/Command-line-text-processing][A book about CLI]]
- Technologies advances extremely rapidly
- It's only my workflow

#+BEGIN_NOTES
- Малая часть, я не хотел делиться той информацией, что и так есть в интернете
- Нужен человек, который бы сообщал мне, что стоит попробовать, а что нет, т. к.
  на всё не хватает времени
- Ожидаю рассказа о вашем workflow
#+END_NOTES
