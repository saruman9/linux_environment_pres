#+STARTUP: indent
#+STARTUP: noinlineimages

#+OPTIONS: reveal_mathjax:t
#+OPTIONS: reveal_slide_number:c/t
#+OPTIONS: reveal_history:t
#+OPTIONS: toc:nil
#+REVEAL_HLEVEL: 3
#+REVEAL_TRANS: linear
#+REVEAL_TITLE_SLIDE:<h2>%t</h2><p>%a</p><p><a href="https://t.me/dura_lex">@dura_lex</a></p>
#+REVEAL_THEME: night
#+REVEAL_EXTRA_CSS: override.css

#+TITLE: How to survive^W live with Linux
#+AUTHOR: Abc Xyz
#+EMAIL: @dura_lex

* How to +survive+ live with Linux
:PROPERTIES:
:UNNUMBERED: notoc
:REVEAL_BACKGROUND: ./images/linux_matrix.png
:END:

↑Title for Windows users↑

* Table of Contents
:PROPERTIES:
:UNNUMBERED: notoc
:END:

#+REVEAL_TOC: headlines 1

* Introduction
** Motivation

#+ATTR_REVEAL: :frag (appear)
- Many questions about tools/tips/scripting/etc in Linux
- Many mentions about my life with Linux
- You should know, what you are losing (Linux vs Windows)
- Sharing experience and knowledge

#+BEGIN_NOTES
- Часто спрашивают совета при работе в Linux, какие инструменты использую.
- Частенько не обходится без шуток. Странно, что сейчас не пошутили, пока всё настраивал.
- Windows не позволяет делать множество вещей.
- В очередной раз хочу рассказать о том, в чём сам разобрался.
#+END_NOTES

** Background

First time in 2006 ([[https://xakep.ru/2007/02/26/36939/][Windows Vista vs Mandriva: какую ОС
  выбрать в 2007 году?]])

#+ATTR_HTML: :width 30%
[[./images/xakep.jpg]]

#+BEGIN_NOTES
Дядя подарил журнал Хакер, на диске которого была Mandriva и *FreeBSD*. Со второй я вообще не понял,
что нужно было делать, т. к. на тот момент *было 12 лет*, а первая заинтересовала, потому что
компьютер был слабый и Windows Vista не тянул, а рабочий стол в виде *вращающегося куба* хотелось.
#+END_NOTES

#+REVEAL: split

#+REVEAL_HTML: <div class="column" style="float:left; width: 30%">
- Mandriva
- Ubuntu
- Runtu
- Fedora
- Debian
- Slackware
- SUSE
- MeeGo
- NixOS
- GuixSD
- Xubuntu
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 30%">
- CentOS
- Calculate
- Gentoo
- BolgenOS
- OpenWRT
- webOS
- ChromiumOS
- AstraLinux
- AltLinux
- Mageia
- Moblin
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 30%">
- Linux Mint
- Kubunutu
- Knoppix
- Damn Vulnerable Linux
- Backtrack
- Mythbuntu
- SteamOS
- Mandrake
- many others
#+REVEAL_HTML: </div>

#+BEGIN_NOTES
Вот далеко не целый список ОС, которые я пробовал или использовал.

Среди интересных (о которых *не будет рассказано* далее):
- MeeGo — Moblin (Intel) + Maemo (Nokia) = Nokia N900
- BolgenOS — всеми известная ОС Дениса Попова, которую нельзя не попробовать.
- ChromiumOS — изучал исходный код, написан великолепно, а главное — есть Rust.
- AstraLinux — очень много работал в своё время, даже писал модули ядра для мандатной системы.
- Backtrack — WHAX + Auditor Security Collection; все ли помнят, откуда пришла KaliLinux?
- SteamOS — ставил основной системой для игр, когда был глупым, толку никакого.
#+END_NOTES

#+REVEAL: split

Arch Linux since 2013

#+ATTR_HTML: :width 70%
[[./images/archlinux_logo.png]]

#+BEGIN_NOTES
Примерно на *первом-втором курсе* я купил ноутбук и установил туда ArchLinux, с тех пор *ни разу не
переустанавливал*, только обновлял пакеты и настройки.
#+END_NOTES

#+REVEAL: split

Open source community member (maintainer, developer)

#+ATTR_HTML: :width 70%
[[./images/oss.jpg]]

#+BEGIN_NOTES
Являюсь maintainer некоторых пакетов в ArchLinux, ну и разработчиком соответственно. Пытаюсь по мере
возможности принимать участие *в обсуждении направления развития* ОС или утилиты, которые мне
интересны.

Стараюсь писать небольшие заметки и статьи для общего пользования, но качества они не очень
хорошего, поэтому в массы их не выкладываю.

Для *всего контента (статьи, доклады, настольные игры)*, что я произвожу стараюсь выкладывать
исходные тексты.
#+END_NOTES

** Disclaimer

I'm the software evangelist I use

#+BEGIN_NOTES
Моя любимая рубрика.

К тому, про что я буду рассказывать, буду относиться *предвзято*.
#+END_NOTES

#+REVEAL_HTML: <div class="container" style="display:flex; align-items:center">
#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/rust_logo.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/spacemacs_logo.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/ghidra_logo.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/archlinux_logo_mini.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 20%">
[[./images/gitlab_logo.png]]
#+REVEAL_HTML: </div>
#+REVEAL_HTML: </div>

* Principles
** KISS

keep it simple stupid

#+ATTR_REVEAL: :frag (appear)
#+ATTR_HTML: :width 90%
[[./images/archlinux_kiss.jpg]]

#+BEGIN_NOTES
Термин был придуман в ВВС США, *главой Lockheed*. Самолёты должны быть настолько простыми, что
*любой механик мог их починить* между боями.

В нашем Linux мирке этот акроним расшифровывается немного по-другому, но значение остаётся тем же. Я
стараюсь *следовать этому принципу*, так же, как и другим в *Unix-way*, например, программа должна
делать только *одну работу хорошо*. Чаще всего GUI приложения в данную категорию не попадают, потому
что они комплексные, как минимум там нужно понимать, как работают потоки.
#+END_NOTES

** TUI

Text-based user interface

#+ATTR_HTML: :width 900
[[./images/Fdedit.png]]

#+BEGIN_NOTES
Текстовый интерфейс может быть достаточно разным, но скорее всего вы привыкли его видеть таким,
каким он представлен на рисунке (Windows).

Это и есть соблюдение принципов KISS.
#+END_NOTES

** CLI

Command-line interface

#+ATTR_HTML: :width 90%
[[./images/cli.png]]

#+BEGIN_NOTES
- легко использовать
- легко переносить
- легко разрабатывать
- чистый KISS
#+END_NOTES

* OS

*It's my opinion, for my workflow

** ArchLinux

#+ATTR_REVEAL: :frag (appear)
- KISS (no bloatware and unnecessary services)
- Stability & Reliability (rolling release)
- Arch Wiki
- =pacman=
- Arch User Repository
- Perfect learning base
- Arch Linux Community (no companies, no corporate ties)
- Flexibility & Customization

#+BEGIN_NOTES
- *Нет ничего лишнего*, только то, что вы сами установили и настроили.
- Да, не удивляйтесь. Пакеты можно *обновлять только все разом*, соответственно в любой промежуток
  времени тестирование проходит именно на последних версиях пакетов. Баги возникают только *из-за
  конфликтов файлов конфигураций*.
- Возникли проблемы на любом Linux — читай Arch Wiki.
- Пожалуй, лучший пакетный менеджер, к тому же самый быстрый.
- Любой пакет из git репозитория. Есть *всё, что душе угодно*.
- Хотите познать Linux, ставьте ArchLinux.
- Яркий пример продукта, который делается сообществом (как с положительной, так и отрицательной
  точки зрения).
- Один из самых разумно-гибких дистрибутивов.
#+END_NOTES

** Why not others?

*** Ubuntu, Fedora, Mint, Manjaro, etc

Because these are very fat OSs:
- a lot of unused software
- many configuration files
- a lot of strange behavior

But for some reason these distributions are very useful

*** Gentoo, LFS

Fuss too much with them

*** NixOS, GuixSD

NixOS:

- DSL
- some +my+ issues
- FHS (Filesystem Hierarchy Standard)

GuixSD:

- very unstable
- libre OS

* Software

Mostly CLI and TUI

#+BEGIN_NOTES
Только тот софт, которым пользуюсь я.
#+END_NOTES

** Internet
*** Network managers

- NetworkManager (=nmcli=, =nmtui=)
- systemd-networkd
- iwd

#+BEGIN_NOTES
- Из коробки есть поддержка практически любых сетевых соединений, что-то доставляется плагинами.
- Минималистичная настройка, использую там, где требуется *настроить один раз и забыть*.
- Всё, что требуется для сетевого соединения. Без каких-либо зависимостей от Intel.
#+END_NOTES

*** Tor and I2P

#+ATTR_REVEAL: :frag (appear)
- SOCKS
  - =tsocks=, =proxychains-ng=
  - =libproxy=
  - environment variables
- HTTP
  - =httptunnel=
  - =proxytunnel=
  - =corkscrew=
- torify (applications w/o proxy settings)

#+REVEAL: split

- i2p
  - mail
  - messenger
  - IRC
  - iMule
  - etc

#+ATTR_REVEAL: :frag appear
/Средство, позволяющее ежедневно водить копирастам, спецслужбам и прочим пидорам хуём по губам/ (c) Луркоморье

*** Web browsers

- w3m
- elinks

Useful for fast browsing, scraping from console, previewing in file managers and many other cases

#+REVEAL: split

Firefox

Other VIM-based browsers are unstable and have less features (based on WebKit, didn't have Rust Quantum engine):

- luakit
- surf
- qutebrowser

#+REVEAL: split

VIM plugins:

- Pendactyl (only Extended Support Release)
- Tridactyl
- Vimium
- Vimium C (current)

#+REVEAL: split

Hint mode

#+ATTR_HTML: :width 90%
[[./images/vimium_c.png]]

#+REVEAL: split

Console mode

#+ATTR_HTML: :width 90%
[[./images/tridactyl.png]]

*** youtube-dl

=youtube-dl= usage

#+ATTR_HTML: :width 70%
[[./images/yt_dl.png]]

#+BEGIN_NOTES
1000 и 1 способ скачать/получить ссылку видео, аудио и т. п.
#+END_NOTES

#+REVEAL: split

Extractors list

#+ATTR_HTML: :width 70%
[[./images/yt_dl_list.png]]


#+REVEAL: split

tridactyl / etc + youtube-dl + mpv / mpd

=

video/audio ninja (you is godlike with i3)

#+REVEAL: split

Restrictions, advertising? What are you talking about?

*** curl — httpie

- simple using
- nice format output
- JSON parsing (=curl= + =jq=)
- etc

#+REVEAL: split

Example of default output

#+ATTR_HTML: :width 80%
[[./images/httpie.png]]

*** wget — aria2

- Faster (segmented downloading)
- BitTorrent extensions (DHT, PEX, Multi-Tracker, UDP tracker, local peer discovery, etc)
- More protocols (FTP, Metalink, etc)

# *** Cloud storages

# WebDAV
# gvfs with encryption

*** Torrents
*Transmission*

- Client-server architecture
- Mobile client
- CLI client for scripts + TUI client — =tremc=

#+ATTR_HTML: :width 70%
[[./images/tremc_0.png]]

#+REVEAL: split

Torrent info

[[./images/tremc_1.png]]

#+REVEAL: split

*+peerflix+* *WebTorrent*

- Streaming torrent client
- Modules
- Media futures
- node.js & browser +needed Rust/wasm version+

*** Mail — (neo)mutt + OfflineIMAP + getmail + msmtp + etc

- Customization
  - Key bindings
  - Custom mail headers
  - Favorite editors
  - View, colors, sidebars
- Modules
  - Address books
  - IMAP, POP3, SMTP clients
  - Password managers
  - Everywhere in sh/bash

#+REVEAL: split

- GPG
- CLI
- No JS, HTML

#+REVEAL: split data-background="./images/neomutt.png"

*** Messengers

*BitlBee* - IRC gateway

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
  - XMPP
  - Hipchat
  - Hangouts
  - Twitter
  - Skype
  - Telegram
  - Facebook
  - VK
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
  - Matrix
  - Discord
  - Steam
  - Mastodon
  - Slack
  - ICQ
  - etc
#+REVEAL_HTML: </div>

#+REVEAL: split

BitlBee interface

#+ATTR_HTML: :width 80%
[[./images/bitlbee.png]]

#+REVEAL: split

*WeeChat* - IRC

[[./images/weechat.gif]]

#+REVEAL: split

*MCabber*, *profanity* — XMPP

- PGP
- OTR
- Plugins/Modules
- Multi-User chat
- Command completion

#+REVEAL: split

profanity Pip-Boy

[[./images/profanity.png]]

#+REVEAL: split

*toxic* — Tox

- P2P
- For secure conversation

#+REVEAL: split

*tg-cli* — Telegram, but telegram-desktop too

*** RSS, news

*newsboat*

As mutt, but for RSS

#+REVEAL: split

*Telegram*

Channels with bots, which sends RSS (Reddit, Twitter, HackerNews, Lobste.rs,
etc) to channels

#+BEGIN_NOTES
Now I don't read news, very much time, which I can spend for
developing/writing/etc.
#+END_NOTES

*** Remote desktop

- Easy tasks

  ssh with X forwarding (use settings for compressing and encrypting traffic for
  speedup)

- Hard tasks

  - VNC
  - qemu with SPICE + VNC

** Multimedia
*** Image viewers
*Framebuffer* (energy saving)

- =fbi=
- =fbv=

#+ATTR_REVEAL: :frag (appear)
Don't forget configure tty!

#+REVEAL: split

*Simple*

- feh
  - CLI and hotkey powerful
  - Very simple (so no screenshots)

#+REVEAL: split

- sxiv (more GUIably, than feh)
- vimiv (VIM image viewer)

*** ImageMagick

Very powerful image processing tool!

Throw out your GIMP. A joke of course. Throw out your Photoshop.

*** Music

*mpd*

- Server with clients:
  - mobile
  - GUI
  - TUI
  - CLI
- mpdscribble

#+BEGIN_NOTES
I don't like music streaming services, because too much choices. I have player,
which firmware is open source, I create tools for syncing playlists. I create
mini iTunes.
#+END_NOTES

#+REVEAL: split

ncmpcpp

#+ATTR_HTML: :width 100%
[[./images/ncmpcpp.png]]

*** Video
*Players*

- mpv — most powerful video/audio player
- cvlc — CLI version of VLC

#+REVEAL: split

*FFmpeg*

Converting, hardware rendering, screencasting, input/output many formats
(camera, screens, devices)

*** Metadata

Many interesting things you can know from metadata of video, images and data

- ExifTool (audio, video, images, documents, etc)
- exiv2 (images)

** Utilities
*** Terminal emulators

*urxvt (rxvt-unicode)*
- Old
- Universal
- Many patches and plugins developed in Perl
- Configurations in Xresources

#+REVEAL: split

*Alacritty*
- GPU rendering
- Rust
- Many features

#+REVEAL: split

*Kitty*
- GPU rendering
- Python
- More features (Unicode glyphs, many nice bindings, graphics etc)

*** Terminal multiplexer. tmux

Also =byobu= as more friendly and =screen= as older

#+ATTR_HTML: :width 90%
[[./images/tmux.png]]

#+BEGIN_NOTES
- Enables multiple windows and panes within a single terminal window
- Keeps windows and panes in a session
- Enables session sharing (great for pair programming)
#+END_NOTES

*** File managers

*ranger*

- Many features
- Python
- Slow

#+REVEAL: split

ranger interface

[[./images/ranger.png]]

#+REVEAL: split

*vifm*

- C
- VIM
- Diffing
- Filtering
- Searching
- Batch renaming

#+REVEAL: split

vifm interface

[[./images/vifm.png]]

*** Git

You should learn it!

I use it everywhere:
- control version
- backups
- diffing
- merging
- review
- messaging
- file system
- etc

#+REVEAL: split

*Gitea*, *GitLab*, *GitWeb* as self-hosted Git-repository managers

#+ATTR_HTML: :width 75%
[[./images/git-instaweb.png]]

*** Backups

*restic*

Encrypted snapshots, many backends + systemd

# *** Synchronization

# Syncthing
# Unison

** Text editing

Use doc{,x}, ppt{,x}, xls{,x} and others if you really needed it.

*** VIM

#+ATTR_HTML: :width 50%
[[./images/vim_quit.jpeg]]

#+REVEAL: split

- Modern text editor (tabs, windows, buffers, syntax highlighting, spell
  checking, folding, etc)
- Modal editor (insert and normal modes + visual and line modes)
- Comprehensive help system
- Memory footprint is very low, faster than other
- Command centric. You can perform complex text related task with few commands
- Many plug-in available
- Native scripting (vimscript) and built-ins commands
- vimdiff, rview, rvim
- Ubiquitous

#+REVEAL: split

#+ATTR_HTML: :width 60%
[[./images/vim_evangelism.png]]

#+BEGIN_NOTES
Use VIM everywhere!
#+END_NOTES

*** Emacs

#+ATTR_HTML: :width 70%
[[./images/vim_vs_emacs.png]]

#+REVEAL: split

- Client-server (share the buffer list, kill ring, undo and other)
- Pervasive help system with keybindings, functions and commands documented on
  the fly
- CLI, TUI, GUI
- Extensible and customizable Lisp programming language variant (Emacs Lisp)!..

#+REVEAL: split

- Ability to emulate vi and vim (using Evil, Viper or Vimpulse)
- A powerful and extensible file manager (dired), integrated debugger, and a
  large set of development and other tools
- Having every command be an Emacs Lisp function enables commands to DWIM (Do
  What I Mean). For example, a =switch-or-split-window=
- "An OS inside an OS"

#+ATTR_REVEAL: :frag (appear)
Rust ♥️ Emacs = remacs

*** Spacemacs & Doom

My choice:

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
#+ATTR_HTML: :width 50%
[[./images/spacemacs_logo.png]]
#+REVEAL_HTML: </div>

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
[[./images/doom_logo.png]]
#+REVEAL_HTML: </div>

*** Org-mode

Your Life in Plain Text

- Keeping notes
- Maintaining TODO lists
- Planning projects
- Authoring documents (à la Jupyter notebook, tablesheet, exporting to another
  formats)

#+ATTR_REVEAL: :frag (appear)
This presentation created in org-mode and exported to HTML + reveal.js

#+BEGIN_NOTES
Использую для всего на свете: отчёты, заметки, презентации, планирование,
научные работы.
#+END_NOTES

#+REVEAL: split

Planning

#+ATTR_HTML: :width 80%
[[./images/org_mode_0.jpg]]

#+REVEAL: split

Clocking

#+ATTR_HTML: :width 80%
[[./images/org_mode_1.jpg]]

#+REVEAL: split

Agendas

#+ATTR_HTML: :width 80%
[[./images/org_mode_2.jpg]]

#+REVEAL: split

Capturing

#+ATTR_HTML: :width 80%
[[./images/org_mode_3.jpg]]

#+REVEAL: split

Tables

#+ATTR_HTML: :width 80%
[[./images/org_mode_4.jpg]]

#+REVEAL: split

Exporting

#+ATTR_HTML: :width 80%
[[./images/org_mode_5.jpg]]

#+REVEAL: split

Working with source code

#+ATTR_HTML: :width 80%
[[./images/org_mode_6.jpg]]

*** LaTeX

#+BEGIN_SRC latex
\mode<presentation>
{
  \usetheme{dsec}
  \dsecset{progressbar = frametitle}
  \dsecset{subsectionpage = progressbar}
}
\title{Introduction to software-based
 microarchitectural side-channel attacks}
\subtitle{}

\author{Abc Xyz\\
@dura\_lex}
\titlegraphic{\includegraphics[height = 0.9cm]{logo.pdf}}

\date{}
\subject{Information security}
#+END_SRC

#+REVEAL: split

[[./images/latex_pdf.png]]

#+REVEAL: split

- Typesetting journal articles, technical reports, books, and slide
  presentations
- Control over large documents containing sectioning, cross-references, tables
  and figures
- Typesetting of complex mathematical formulas
- Advanced typesetting of mathematics with AMS-LaTeX
- Automatic generation of bibliographies and indexes
- Multi-lingual typesetting
- Inclusion of artwork, and process or spot colour

#+BEGIN_NOTES
Использую для больших докладов, научных работ.
#+END_NOTES

*** Zathura

Simple PDF reader

- VIM bindings
- Automatic reloading document
- Synctex
- Recoloring, reformatting
- CLI

*** Markdown

Use for work

*** AsciiDoc

Use for _*real*_ work

- Including files
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#lists][Normal lists with complex content]]
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#links][Anchors]]
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#images][Formatted images]]
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#source-code][Powerful code blocks]]
- Comments
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#tables][Tables for the people]]
- ToC
- [[https://asciidoctor.org/docs/asciidoc-syntax-quick-reference/#bibliography][Bibliography]]
- etc

*** Pandoc

Markup converter

#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
- Markdown
- reStructuredText
- AsciiDoc
- Org-Mode
- Textile
- HTML
- CSV
- EPUB
- roff
#+REVEAL_HTML: </div>
#+REVEAL_HTML: <div class="column" style="float:left; width: 50%">
- LaTeX
- DocBook
- OPML
- InDesign
- Wiki
- reveal.js
- Microsoft Word
- OpenOffice/LibreOffice
- etc
#+REVEAL_HTML: </div>

*** Spell checkers

Aspell, Hunspell + LanguageTool for grammars

Use my personal dict everywhere (editors, browser, shell, edit fields)

*** Tesseract OCR

- CLI
- API
- Multilanguages

** Core utilities

Utilities stable but old and have few features

Not replace, but alternatives

For scripts you should use first order applications for compatability

It's normal, that more than half applications were developed in Rust language

*** Bash — Zsh
*** ls — lsd
*** tree — exa
*** cat + less, more — bat
*** cp, mv, rm — rsync

=-i= for prompting the user before the action

Also backups

*** du — ncdu

sn — developed in Rust, multithreads, speedup

*** tar, (un)zip — bsdtar, 7z
*** find — fd
*** diff — git-diff, colordiff

More powerful, more future

colordiff, diffoscope

**** vimdiff (VIM), ediff (Emacs)

Powerful interactive tools

3-way diff

*** grep — ripgrep

- faster
- multiline grep
- powerful regexp on Rust
- modern
- rgall replace find + grep

*** sed, {g,n,m}awk

You should use it more often

*** dmesg — journalctl

- filters
- all info from syslog, dmesg, other logging systems

*** (u)mount — udisks2

Mounting with user's permissions

Manipulating by systemd

*** Shell built-ins

- alias
- type
- time

Other functions

*** Simple and useful tools for RE and etc
**** tee
**** mktemp
**** tr
**** cut
**** od, xxd, hexdump
**** sort, uniq, comm
**** head, tail
**** wc
**** strings
**** iconv
**** file
*** Rust section

Install rustup

cargo install and you on the horse

**** tokei

Rust

Inspect source code

**** jq

JSON prettifier

**** xsv

Rust

Very fast parsing of large CSV files

miller have more features

**** fselect

Rust

Finding on file system with SQL queries. Find + ls + awk

**** bingrep

Color readelf, more powerful grep for elf files

**** ripgrepall

Find everywhere: binary files, PDFs, images, music, video, etc

**** stringsext

Better searching Unicode strings, but performance may be better

**** tealdeer

tldr, documentation

*** Other useful core utilities

- ls{blk,pci,cpu,usb}
- sudo, but not su (sudoedit for editing files)
- kill, pkill, killall
- pgrep, pidof
- ps, free, top, htop

*** Systemd

vs SYSinitV

** Security
*** Password manager

pass

** Windows managers
*** i3
*** Panel
*** dmenu, rofi
*** dunst

Notification

*** Clipboard manager
* Tips'n'Tricks or fully automation
** Configurations

Chezmoi — sync configs for everything.

Check directories and files in home directory and delete it or add to ignore list or add to configuration list files.

Check unneeded packages and install new or delete unneeded.

You can encrypt files, part of elements, use different configurations for different machines.

*** Dark and bright

Pain in the eyes or headache.

Auto switching temperature of color, but can't automate the detecting of the light switch off.

** VIM/Emacs everywhere

Don't use mouse, because it need more time, than keyboard. Home row of your keyboard is your friend: speedup, less fever.

Xdotool + Emacs = edit everything in Emacs

VIM/Emacs keymaps and modes everything: browser, IDE (IDEA, eclipse, etc), windows manager, multiplexer, music player, torrent manipulation programs, mail, everything except Ghidra.

** Presentations, reports, documents

Only plaintext, because you can diffing and use git for that.

I can convert org mode (asciidoc) to everything: plaintext, static HTML, LaTeX, PDF, presentations (beamer, reveal.js).

I can share sources and use parts of already wrote items.

I have many notes with ideas, presentations.

I sync between machines reports, documents for working with everywhere.

** Metro workflow

Edit, git add

Org mode, orgzly, git on mobile

I don't use social networks and don't read news, I try to create and structure my knowledge. It's very helpful for me.

Read issues, developers lists, write answers.

** Mobile phone

Use open source utilities: F-Droid.

Use Termux actively: ssh, running all Linux stuff (tmux and my rust programs), share Chezmoi configs.

** Router, multimedia box

All works on the ArchLinux.

Pihole, multimedia combine player, I forget name.

** Packages and open source

It's cause why I not use NixOS.

I have custom PKGBUILDs for all patched software (also cracks^Winitial settings for proprietary software). I also maintainer of some packages in AUR and regulate other packages (ask update, delete, permissions of maintaining).

** Automate everything

Follow for the tickets, news, sites (scripts in Python, PHP, Rust).

First target was CDO. I don't like specific subjects, but need info about it: I wrote bot for VK, which sent me messages and documents from group. Hack the CDO.

No ads everywhere, scripting blocks for even complex ads from Yandex.

** Statistics about everything

I inspect everything: our family budget, the books that I read, movies and serials that I watched, my sports actions, party board games, etc. I use text files for managing it all, I can filter, create reports, sharing information between machines, all is encrypted.
I use GUI or sites for something tasks, because my wife can't use my tools. I export information from this and continue use my tools for that.

* Summary

10% of all, needed time

Needed person, who can say me: "It's useful, taste it"

I want to create smart home, but it's very hard, because you should create user-friendly interface.

You must read [[https://github.com/jlevy/the-art-of-command-line][this]], because I don't want to share information, which already exist in structural forms.

Like a book about CLI — https://github.com/learnbyexample/Command-line-text-processing.

[[https://suckless.org/rocks/][Suckless]]. Develops many useful apps, but it's very minimal. One app — one function, you need recompile program for changing settings.
